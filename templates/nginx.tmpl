{{range $dir := lsdir "/services/nginx"}}

{{$filename := base $dir}}
{{$custdir := printf "/services/nginx/%s/servers/" $filename}}
{{if ne (len (ls $custdir)) 0}}
upstream {{$filename}} {
	{{$custdir := printf "/services/nginx/%s/servers/" $filename}}
	{{range ls $custdir}}
		{{$key := printf "/services/nginx/%s/servers/%s" $filename .}}
		{{$value := getv $key}}
		server {{$data := json $value}}{{$data.ip}}:{{$data.port}};
	{{end}}
}
{{else}}
upstream {{$filename}} {
	server localhost;
}
{{end}}

{{$servernamedir := printf "/services/nginx/%s/root" $filename}}

server {
	listen 80;
	rewrite ^(.*) https://$host$1 permanent; 
	server_name {{getv $servernamedir}};

	client_max_body_size 4G;
	client_header_timeout 60;
	client_body_buffer_size 1K;
	client_header_buffer_size 1k;
	keepalive_timeout 20;

	location / {

		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		set $is_https 'off';
            if ($http_x_forwarded_proto ~ 'https') {
                    set $is_https 'on';
            }
		proxy_set_header HTTPS $is_https;

	{{$custdir := printf "/services/nginx/%s/servers/" $filename}}
	{{range ls $custdir}}
		{{$key := printf "/services/nginx/%s/servers/%s" $filename .}}
		{{$value := getv $key}}	
		
		proxy_redirect off;
		if (!-f $request_filename) {
			proxy_pass http://{{$data := json $value}}{{$data.ip}}:{{$data.port}};
			break;
		}
	{{end}}

	}
}
{{end}}
